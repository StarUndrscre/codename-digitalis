[gd_scene load_steps=4 format=3 uid="uid://n2hxd5rwfy5e"]

[ext_resource type="Texture2D" uid="uid://cjleysgwphey0" path="res://icon.svg" id="1_1rrja"]
[ext_resource type="PackedScene" uid="uid://ddxdmm11giomp" path="res://scenes/conductor.tscn" id="1_cfx6g"]

[sub_resource type="GDScript" id="GDScript_tnnty"]
script/source = "extends Node2D

@onready var conductor = get_node(\"Conductor\")
@onready var sprite = get_node(\"Icon\")
@onready var label = get_node(\"Label\")
@onready var beat_delay = 0
@onready var seconds_per_beat = conductor.get_seconds_per_beat()
@onready var seconds_per_measure = conductor.get_seconds_per_measure()
@onready var bpm = conductor.get_bpm()
@onready var loaded_song_file = conductor.get_song_path()

func _on_conductor_songfile_change():
	seconds_per_beat = conductor.get_seconds_per_beat()
	seconds_per_measure = conductor.get_seconds_per_measure()
	loaded_song_file = conductor.get_song_path()
	bpm = conductor.get_bpm()

# Called when the node enters the scene tree for the first time.
func _ready():
	conductor.set_song_file(\"res://songs/puffer.ogg\")
	label.text = \"BPM: \" + var_to_str(bpm) + \"\\nSong file: \" + loaded_song_file

# Called every frame. 'delta' is the elapsed time since the previous frame.
func _process(delta):
	if !conductor.song_is_playing():
		conductor.play_song()
	
	if conductor.song_is_playing():
		if beat_delay < 0:
			var beat_tween = get_tree().create_tween().set_trans(Tween.TRANS_EXPO).set_ease(Tween.EASE_OUT)
			beat_tween.tween_property(sprite, \"scale\", Vector2(0.9, 0.9), seconds_per_beat).from(Vector2(1, 1))
			beat_delay = seconds_per_beat
		
		beat_delay -= delta
"

[node name="Realtest" type="Node2D"]
script = SubResource("GDScript_tnnty")

[node name="Conductor" parent="." instance=ExtResource("1_cfx6g")]

[node name="Icon" type="Sprite2D" parent="."]
position = Vector2(309, 284)
texture = ExtResource("1_1rrja")

[node name="Label" type="RichTextLabel" parent="."]
offset_left = 51.0
offset_top = 33.0
offset_right = 441.0
offset_bottom = 254.0

[connection signal="songfile_change" from="Conductor" to="." method="_on_conductor_songfile_change"]
