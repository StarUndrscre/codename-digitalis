[gd_scene load_steps=4 format=3 uid="uid://bj1fsalk34wn7"]

[ext_resource type="Script" path="res://scripts/IntroScreen.gd" id="1_d7o5i"]

[sub_resource type="Shader" id="Shader_2aw80"]
code = "shader_type canvas_item;

#define RM_FACTOR   0.9
#define RM_ITERS     90

uniform vec2 resolution = vec2(1280.0, 720.0);

float plasma(vec3 r) {
	float mx = r.x + TIME / 0.130;
	mx += 20.0 * sin((r.y + mx) / 20.0 + TIME / 0.810);
	float my = r.y - TIME / 0.200;
	my += 30.0 * cos(r.x / 23.0 + TIME / 0.710);
	return r.z - (sin(mx / 7.0) * 2.25 + sin(my / 3.0) * 2.25 + 5.5);
}

float scene(vec3 r) {
	return plasma(r);
}

float raymarch(vec3 pos, vec3 dir) {
	float dist = 0.0;
	float dscene;

	for (int i = 0; i < RM_ITERS; i++) {
		dscene = scene(pos + dist * dir);
		if (abs(dscene) < 0.1)
			break;
		dist += RM_FACTOR * dscene;
	}

	return dist;
}

void mainImage(out vec4 fragColor, in vec2 fragCoord) {
}

void fragment() {
	vec2 RESOLUTION = resolution / TEXTURE_PIXEL_SIZE;
	
	float c, s;
	float vfov = 3.14159 / 2.3;

	vec3 cam = vec3(0.0, 0.0, 30.0);

	vec2 uv = UV - 0.5;
	uv.x *= RESOLUTION.x / RESOLUTION.y;
	uv.y *= -1.0;

	vec3 dir = vec3(0.0, 0.0, -1.0);

	float xrot = -vfov * length(uv);

	c = cos(xrot);
	s = sin(xrot);
	dir = mat3(vec3(1.0, 0.0, 0.0),
	           vec3(0.0,   c,  -s),
	           vec3(0.0,   s,   c)) * dir;

	c = normalize(uv).x;
	s = normalize(uv).y;
	dir = mat3(vec3(  c,  -s, 0.0),
	           vec3(  s,   c, 0.0),
	           vec3(0.0, 0.0, 1.0)) * dir;

	c = cos(0.7);
	s = sin(0.7);
	dir = mat3(vec3(  c, 0.0,   s),
	           vec3(0.0, 1.0, 0.0),
	           vec3( -s, 0.0,   c)) * dir;

	float dist = raymarch(cam, dir);
	vec3 pos = cam + dist * dir;

	COLOR.rgb = mix(
		vec3(0.4, 0.8, 1.0),
		mix(
			vec3(0.0, 0.0, 1.0),
			vec3(1.0, 1.0, 1.0),
			pos.z / 10.0
		),
		1.0 / (dist / 20.0)
	);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_8mo5d"]
shader = SubResource("Shader_2aw80")
shader_parameter/resolution = Vector2(1280, 720)

[node name="IntroScreen" type="Node2D"]
script = ExtResource("1_d7o5i")

[node name="ColorRect" type="ColorRect" parent="."]
material = SubResource("ShaderMaterial_8mo5d")
offset_right = 1280.0
offset_bottom = 720.0
color = Color(0, 0, 0, 1)
